DROP DATABASE if EXISTS ski_equipment_manufacturer;
CREATE DATABASE IF NOT EXISTS ski_equipment_manufacturer COLLATE = utf8_danish_ci;
USE ski_equipment_manufacturer;

CREATE TABLE `skiType` (
  `typeID` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
  `type` enum('classic', 'skate', 'doublePole') NOT NULL,
  `model` enum('active', 'activePro', 'endurance', 'intrasonic', 'racePro', 'raceSpeed', 'redline') NOT NULL,
  `description` varchar(200) NOT NULL,
  `historical` tinyint(1) DEFAULT NULL,
  `url` varchar(255) NOT NULL,
  `msrp` int DEFAULT NULL
    
);

CREATE TABLE `transporter` (
  `transporterID` int(20) PRIMARY KEY AUTO_INCREMENT NOT NULL,
  `name` varchar(100) NOT NULL
);

INSERT INTO `transporter` (`name`) VALUES
("Posten"),
("PostNord"),
("Bring");

CREATE TABLE `customer` ( 
    `customerID` int(20) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `customerName` varchar(60) NOT NULL,
    `startDate` date NOT NULL,
    `endDate` date NOT NULL,
    `address` varchar(40) NOT NULL
);

INSERT INTO `customer` (`customerName`, `address`) VALUES
("Sang", "Ringkollen 1F");

CREATE TABLE `employee` (
    `employeeNumber` int(20) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `name` varchar(60) NOT NULL,
    `department` varchar(40) NOT NULL
);

INSERT INTO `employee` (`name`, `department`) VALUES
("Lars", "Sales"),
("Mats", "Management");

CREATE TABLE `franchise` (
    `customerID` int(20) NOT NULL,
    `negotiatedPrice` varchar(60) NOT NULL,
    `information` varchar(200) DEFAULT NULL,
    `address` varchar(30) NOT NULL,
    
    FOREIGN KEY (`customerID`) REFERENCES `customer` (`customerID`) 
);

CREATE TABLE `orders` (
    `orderNumber` int(20) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `quantity` int(2) NOT NULL,
    `totalPrice` int NOT NULL,
    `state` enum("new", "open", "available", "cancelled", "ready", "shipped") NOT NULL,
    `date` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
);

INSERT INTO `orders` (`quantity`, `totalPrice`, `state`) VALUES
(10, 1000, "new"),
(20, 2000, "open"),
(30, 3000, "ready"),
(40, 4000, "available"),
(50, 5000, "cancelled"),
(60, 6000, "shipped");

CREATE TABLE `productionPlan` (
    `employeeNumber` int(20) NOT NULL,
    `typeID` int(11) NOT NULL,
    `startDate` date NOT NULL PRIMARY KEY,
    `endDate` date DEFAULT NULL,
    
    FOREIGN KEY (`employeeNumber`) REFERENCES `employee` (`employeeNumber`),
    FOREIGN KEY (`typeID`) REFERENCES `skiType` (`typeID`) 
);

CREATE TABLE `shipment` (
    `shipmentNumber` int(20) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `orderNumber` int(20) NOT NULL,
    `transporterID` int(20) NOT NULL,
    `customerID` int(20) NOT NULL,
    `shippingAddress` varchar(100) NOT NULL,
    `pickUpDate` timestamp NOT NULL DEFAULT current_timestamp(),
    `state` enum("ready", "shipped") NOT NULL,
    
    FOREIGN KEY (`transporterID`) REFERENCES `transporter` (`transporterID`),
    FOREIGN KEY (`customerID`) REFERENCES `customer` (`customerID`),
    FOREIGN KEY (`orderNumber`) REFERENCES `orders` (`orderNumber`) 
);

CREATE TABLE `ski` (
    `productID` int(20) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `typeID` int(11) NOT NULL,
    `length` enum("142", "147", "152", "157", "162", "167", "172", "177", "182", "187", "192", "197", "202", "207") NOT NULL,
    `reserved` int(11) DEFAULT NULL,
    
     FOREIGN KEY (`typeID`) REFERENCES `skiType` (`typeID`) 
);



CREATE TABLE `store` (
    `customerID` int(20) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    `price` int NOT NULL,
    `address` varchar(30),

    FOREIGN KEY (`customerID`) REFERENCES `customer` (`customerID`) 
);

CREATE TABLE `teamSkier` (
  `customerID` int(20) AUTO_INCREMENT NOT NULL,
  `dateOfBirth` date NOT NULL,
  `club` varchar(100) NOT NULL,
  `numSkis` int(3) DEFAULT NULL,
  
  FOREIGN KEY (`customerID`) REFERENCES `customer` (`customerID`) 
);

